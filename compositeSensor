{
  "name": "compositeSensor",
  "version": "1.0.0",
  "type": "sensor",
  "script": "var values = waylayUtil.getProperty(options, \"values\")\nvar sensor = waylayUtil.getProperty(options, \"sensor\")\n\nvar sensorP = function(properties) {\n   return waylay.sensors.execute(sensor, 'latest', {properties})\n}\n\nvar list = []\n_.map(values, value => {\n    console.log(\"value\", value)\n    value = _.mapValues(value, v => { \n    if(_.isString(v) && v.indexOf(\"{{\") > -1)\n        return waylayUtil.template(options, v)\n    else\n        return v\n    })\n    list.push(sensorP(value))\n})\n\nvar values = []\nPromise.all(list)\n.then((args) => {\n    //console.log(args)\n    send(null, {observedState : \"done\", rawData : {values: args}})\n    }\n)\n.catch(err => send(new Error(err)))",
  "metadata": {
    "author": "",
    "category": "Waylay",
    "description": "Composite sensor, it will execute as many sensors  \nas there are objects in the values list.\nAs from version 1.0.0. it uses waylay nmp package (sandbox 0.14.0)\n\nValues are list of arguments required by the actuator.\nFor instance <pre>\n[{ \n \"city\": \"Ghent\"\n  },\n  { \n  \"city\": \"Brussels\"\n  }]\n  </pre>\nfor the sensor currentWeather will execute twice for the inputs as \ndefined in the array\n\nReturn raw data is in format <pre>\n[{ \n \"state\": \"...\",\n  \"rawData\": rawData\n  },..]\n</pre>\n",
    "iconURL": "https://static.waylay.io/plugs/icons/box_out.png",
    "supportedStates": [
      "done",
      "error"
    ],
    "requiredProperties": [
      "sensor",
      "values"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "values",
        "dataType": "object[]"
      }
    ]
  }
}

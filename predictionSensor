{
  "name": "predictionSensor",
  "version": "1.1.4",
  "type": "sensor",
  "script": "waylay.analytics.baseUrl = options.globalSettings.waylay_analytics ||  'https://ts-analytics.waylay.io'\n\nvar resource = waylayUtil.getProperty(options, 'resource') || waylayUtil.getResource(options)\nvar metric = options.requiredProperties.metric\nvar params = waylayUtil.getProperty(options, \"params\") || { }\n\nif (typeof params === 'string') {\n    try {\n        params = JSON.parse(params)\n    } catch(err) {\n        console.log(err)\n    }\n}\n\nconst sendResult = function (res) {\n  var value = {\n    observedState: res.predictions.length > 0 ? 'Computed' : 'Not Computed',\n    rawData: {\n        predictions: res.predictions,\n        first_prediction : res.first_prediction,\n        last_observation: res.last_observation\n    }\n  }\n  send(null, value)\n}\n\nconst sendError = function(err) {\n    if (err.response) {\n        console.error(err.response.data)\n        send( new Error( JSON.stringify({ \n            method:err.response.request.method, \n            path:err.response.request.path, \n            status:err.response.status, \n            message:err.response.data.error \n        } ) ) )\n    } else {\n        console.error(err)\n        send(err)\n    }\n}\n\nif (resource && metric) {\n    waylay.analytics.predict(resource, metric, params)\n        .then(sendResult,sendError)\n} else {\n    send(new Error('Please provide resource and metric'))\n}\n\n",
  "metadata": {
    "author": "Dylan & Thomas",
    "category": "TS Analytics",
    "description": "provides forecasts for a time series\n\n<h5>Properties</h5>\n<ul>\n<li><code>resource</code></li>\n<li><code>metric</code> name of the metric configuration</li>\n<li><code>params</code> overrides for the analytics option configuration (see below)</li>\n</ul>\n<h5>States</h5>\n<ul>\n<li><b>Computed</b> if predictions are available</li>\n<li><b>Not Computed</b> otherwise </li>\n</ul>\n<h5>Raw data returned</h5>\n<ul>\n<li><code>predictions</code> list of prediction values. The size of the prediction window depends on the analytics option configuration, defaults to 10 predictions</li>\n<li><code>last_observation</code> last observation before the predictions</li>\n<li><code>first_prediction</code>  first prediction </li>\n</ul>\n\n<strong>you must have TS Analytics package to run this sensor.</strong>\n\n<p>\nBefore using this sensor, configure the analytics options for \nthis metric using the  <a href=\"/#/analytics\">analytics dashboard</a>.\nAlternatively you should give a complete option configuration in the\n<code>params</code> section. \nSee <a href='https://github.com/waylayio/TS_Analytics/blob/master/doc/apidoc.md'>apidoc</a>\non how to specify options.\n</p>\n",
    "iconURL": "https://static.waylay.io/plugs/icons/prediction.png",
    "supportedStates": [
      "Computed",
      "Not Computed"
    ],
    "requiredProperties": [
      "resource",
      "metric",
      "params"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "predictions",
        "dataType": "object[]"
      },
      {
        "parameter": "first_prediction",
        "dataType": "object"
      },
      {
        "parameter": "last_observation",
        "dataType": "object"
      }
    ]
  }
}

{
  "name": "getAverageFromTS",
  "version": "1.1.0",
  "type": "sensor",
  "script": "var resource  = waylayUtil.getProperty(options, \"resource\") || waylayUtil.getResource(options) \n\nvar metric = waylayUtil.getProperty(options, \"metric\")\nvar hours =  waylayUtil.getProperty(options, \"hours\") || 1\n\nvar from = moment().subtract(parseInt(hours),'hours');\nvar qs = {from: from.unix() * 1000, grouping: \"hour\"};\n\n//waylay.data.baseUrl = 'https://data-staging.waylay.io'\n\nwaylay.data.getMetricSeries(resource, metric, qs)\n.then(data => {\n    data.series = _.reject(data.series, function(o) { return o[1] === null })\n    if(data.series.length > 0) {\n       var avg = _.sumBy(data.series, function(o) { return o[1]; })/data.series.length;\n        console.log(\"avg:\", avg)\n        var value = {\n            observedState: \"Collected\",\n            rawData: {avg: avg, data: data.series, count: data.series.length, query: data.query}\n        }\n        send(null, value)\n    } else {\n            send(null, {observedState : \"Not Collected\"});\n    }\n})\n.catch(err=> {\n    console.log(err)\n     send(null, {observedState : \"Not Collected\"})\n})\n\n         ",
  "metadata": {
    "author": "Veselin",
    "category": "Waylay",
    "description": "Get average value from the time series database. \nResource is etiher provided from the input field, raw data or from the resource \nassoisated with a node to which this sensor is attached.\nAs from version 1.1.0. it uses waylay nmp package (sandbox 0.14.0)\n\nInput arguments are: <br>\n<ul>\n<li>resource</li>\n<li>metric</li>\n<li>hours, past number of hours, default 1 hour</li>\n<ul>\n",
    "documentationURL": "",
    "iconURL": "https://static.waylay.io/plugs/icons/graph-circle.png",
    "supportedStates": [
      "Collected",
      "Not Collected"
    ],
    "requiredProperties": [
      "resource",
      "metric",
      "hours"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "data",
        "dataType": "object[]"
      },
      {
        "parameter": "avg",
        "dataType": "double"
      },
      {
        "parameter": "count",
        "dataType": "double"
      }
    ]
  }
}

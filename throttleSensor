{
  "name": "throttleSensor",
  "version": "0.0.1",
  "type": "sensor",
  "script": "const window = parseInt(waylayUtil.getProperty(options, \"window\") || 10)\nconst since = parseInt(waylayUtil.getCacheData(options, \"triggeredTime\") || 0)\nconst testWindow = moment().unix()\n\nconsole.log(\"now\", new Date(testWindow))\nconsole.log(\"since\", new Date(since))\nconsole.log(\"window [seconds]\", window)\n\nif(testWindow - since > window) {\n    send(null, { observedState : \"Triggered\", rawData : { triggeredTime: moment().unix()}})  \n} else {\n    send(null, { observedState : \"Skipped\", rawData : { triggeredTime: since }})\n}\n",
  "metadata": {
    "author": "Veselin",
    "category": "Experimental",
    "description": "Input argument is a window. \nIn case you put a polling on 10 seconds and window to 11, it will skip every second tick.\n\nYou can use this sensor to control how often it should trigger, and if you attach this state\nto an actuator, you can control how often the actuator should fire.\n\nThat can be used instead of triggerPolicy flag on the actuator",
    "iconURL": "https://static.waylay.io/plugs/icons/barrier.png",
    "supportedStates": [
      "Triggered",
      "Skipped"
    ],
    "requiredProperties": [
      "window"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "triggeredTime",
        "dataType": "double"
      }
    ]
  }
}
